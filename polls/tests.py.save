from django.contrib.staticfiles.testing import StaticLiveServerTestCase
from selenium.webdriver.firefox.webdriver import WebDriver
from selenium.webdriver.firefox.options import Options
from selenium.webdriver.common.by import By
 
class MySeleniumTests(StaticLiveServerTestCase):
    # carregar una BD de test
    fixtures = ['testdb.json',]
 
    @classmethod
    def setUpClass(cls):
        super().setUpClass()
        opts = Options()
        cls.selenium = WebDriver(options=opts)
        cls.selenium.implicitly_wait(5)
 
    @classmethod
    def tearDownClass(cls):
        # tanquem browser
        # comentar la propera línia si volem veure el resultat de l'execució al navegador
        cls.selenium.quit()
        super().tearDownClass()

def test_creacio_usuari(self):
        # 1. Login com a superusuari
        self.selenium.get(f'{self.live_server_url}/admin/login/')
        self.selenium.find_element(By.NAME, "username").send_keys("isard")
        self.selenium.find_element(By.NAME, "password").send_keys("contrasenya123", Keys.RETURN)

        # 2. Clicar "Users"
        self.selenium.find_element(By.LINK_TEXT, "Users").click()

        # 3. Clicar "Add user"
        self.selenium.find_element(By.LINK_TEXT, "ADD USER").click()

        # 4. Introduir usuari i contrasenya
        self.selenium.find_element(By.NAME, "username").send_keys("usuari_de_prova")
        self.selenium.find_element(By.NAME, "password1").send_keys("ContrasenyaSegura123")
        self.selenium.find_element(By.NAME, "password2").send_keys("ContrasenyaSegura123")

        # 5. Passar a la següent pàgina
        self.selenium.find_element(By.NAME, "_continue").click()

        # 6. Marcar "staff"
        self.selenium.find_element(By.ID, "id_is_staff").click()

        # 7. Desar l’usuari
        self.selenium.find_element(By.NAME, "_save").click()

        # 8. Verificar que l'usuari s’ha creat amb èxit (opcional)
        self.assertIn("was added successfully", self.selenium.page_source)
 
    def test_login(self):
        # anem directament a la pàgina d'accés a l'admin panel
        self.selenium.get('%s%s' % (self.live_server_url, '/admin/login/'))
 
        # comprovem que el títol de la pàgina és el què esperem
        self.assertEqual( self.selenium.title , "Log in | Django site admin" )
 
        # introduïm dades de login i cliquem el botó "Log in" per entrar
        username_input = self.selenium.find_element(By.NAME,"username")
        username_input.send_keys('admin')
        password_input = self.selenium.find_element(By.NAME,"password")
        password_input.send_keys('admin123')
        self.selenium.find_element(By.XPATH,'//input[@value="Log in"]').click()
 
        # comprovem si hem aconseguit entrar a l'admin panel pel títol de la pàgina
        self.assertEqual( self.selenium.title , "Site administration | Django site admin" )
